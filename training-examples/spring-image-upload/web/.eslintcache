[{"/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/index.js":"1","/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/App.js":"2","/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/reportWebVitals.js":"3"},{"size":500,"mtime":1607324311379,"results":"4","hashOfConfig":"5"},{"size":2118,"mtime":1607427141696,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607324311380,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ke7ac9",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/index.js",[],["17","18"],"/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/App.js",["19","20"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [imageList, setImageList] = useState([]);\n\n    const onImageChange = event => {\n        console.warn(\"event : \", event)\n        if (event.target.files && event.target.files[0]) {\n            setSelectedFile(event.target.files[0])\n        }\n    }\n\n    const onFileUpload = () => {\n\n        if (!selectedFile) {\n            alert(\"file seçili değil!\");\n            return;\n        }\n\n        const data = new FormData();\n        data.append('file', selectedFile);\n        data.append('imageName', selectedFile.name);\n\n        fetch(\"http://localhost:8080/file/add\", {\n            method: 'POST',\n            mode: 'no-cors',\n            body: data\n        }).then(response => response.text())\n            .then(result => console.warn(\"result: \", result))\n            .catch(error => console.warn('error', error));\n    };\n\n    useEffect(() => {\n\n        var requestOptions = {\n            method: 'GET',\n        };\n        fetch(\"http://localhost:8080/file/list\", requestOptions)\n            .then(response => response.text())\n            .then(result => setImageList(JSON.parse(result)))\n            .catch(error => console.log('error', error));\n    }, [selectedFile]);\n\n    const getFiles = () => {\n        if (!imageList) {\n            return null;\n        }\n\n        let list = [];\n\n        imageList.map(v => {\n            list.push(<li>\n                <img src={'data:image/png;base64,' + v.fileContent} width=\"150\" style={{margin: 10}}/>\n            </li>)\n        })\n\n        return (\n            <ul>\n                {list}\n            </ul>\n        )\n\n\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <input type=\"file\" name=\"file\" style={{paddingTop: 20}} onChange={(e) => onImageChange(e)}/>\n                <button style={{marginTop:20}} onClick={() => onFileUpload()}>upload image</button>\n                {getFiles()}\n\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/leventyildiz/development/git/sbank-workshop/training-examples/spring-image-upload/web/src/reportWebVitals.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":54,"column":25,"nodeType":"29","messageId":"30","endLine":54,"endColumn":27},{"ruleId":"31","severity":1,"message":"32","line":56,"column":17,"nodeType":"33","endLine":56,"endColumn":103},{"ruleId":"23","replacedBy":"34"},{"ruleId":"25","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["36"],["37"],"no-global-assign","no-unsafe-negation"]